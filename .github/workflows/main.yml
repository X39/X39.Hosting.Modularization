
name: NuGet package publish
on:
  push:
    branches: [ master ]
  workflow_dispatch:
jobs:
  upload-to-npgk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8
      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v1.0.5
        with:
          nuget-version: latest
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --framework net8.0 --no-build --verbosity normal
      - name: Pack
        # CHANGE PACKAGE VERSION - The retarded way
        # Change the /p:VERSION=X.X.X part to change the actual package version.
        # Add --version-suffix ${{ github.sha }} if version suffix is desired
        run: dotnet pack  --configuration Release /p:VersionPrefix=3.0.0.${{ github.run_number }} /p:ContinuousIntegrationBuild=true
      - name: Upload Modularization to NuGet
        run: dotnet nuget push /home/runner/work/X39.Hosting.Modularization/X39.Hosting.Modularization/source/X39.Hosting.Modularization/bin/Release/X39.Hosting.Modularization.*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      - name: Upload Abstraction to NuGet
        run: dotnet nuget push /home/runner/work/X39.Hosting.Modularization/X39.Hosting.Modularization/source/X39.Hosting.Modularization.Abstraction/bin/Release/X39.Hosting.Modularization.Abstraction.*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      - name: Upload Template to NuGet
        run: dotnet nuget push /home/runner/work/X39.Hosting.Modularization/X39.Hosting.Modularization/template/bin/Release/X39.Hosting.Modularization.TemplatePackage.*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
